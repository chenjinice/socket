// 传给 apollo的数据：头 + obuMsg长度 + ObuMsg + 校验和
// 1.头 ：2字节 ， 0x60,0x61
// 2.obuMsg长度 : 2字节
// 3.ObuMsg :长度视其内容而定
// 4.校验和: 1个字节 ,为前面所有字节的校验和

syntax = "proto2";

package obu_apollo;



// 车辆信息
message Car_info{
	required uint32 id = 1;			// 车辆ID
	required uint32 depth = 2;		// 车长*100
	required uint32 width = 3;      // 车宽*100
	required int32 lng = 4;         // 实时位置经度*1e7
	required int32 lat = 5;         // 实时位置纬度*1e7
	required uint32 heading = 6;    // 车的航向角*100
	required uint32 speed = 7;		// 车速*100
	required int32 acc = 8;         // 加速度*10
	
	optional uint32 time = 9;       // 时间戳（当前的秒值（0～59）×1000+当前的毫秒值（0～999））
	optional uint32 hz_accuracy = 10; // 水平精确度*10（5到999）
	optional uint32 gear = 11;      // 车的挡位
	optional uint32	brake = 12;     // 制动开关
	optional uint32 rtk = 13;       // rtk定位方式
	optional int32 alt = 14;        // 实时位置高度
	optional uint32 queue_id = 15;  //编队ID
}

// 单个车道信息
message Lane_flag {
    required uint32 lane_id = 1;  // 车道id
    optional uint32 flag  =  2;   // 车道标识
}

// 本车车道信息
message Lane_info {
    optional uint32 count = 1;
    optional uint32 in_map = 2;		    // 1=在地图内，0=不在地图内
    optional uint32 in_lane = 3;	    // 1=在车道内，0=不在车道内
    optional uint32 current_lane = 4;   // 当前车道
    repeated Lane_flag lane_flags = 5;  // 车道标识
}

message SingleLightInfo {
    optional bool receive_flags = 1; //real uint8
    enum Color {
        UNKNOWN = 0;
        RED = 1;
        YELLOW = 2;
        GREEN = 3;
        BLACK = 4;
    };
    optional Color color_status = 2; //real uint8
    optional uint32 light_remain_times = 3;

}

message LaneStopPoint {
    optional int32 latitude = 1;
    optional int32 longitude = 2;
}

message TrafficLightInfo{
    optional uint32 traffic_light_cycle_count = 1;
    optional SingleLightInfo current_lane_light = 2;
    optional SingleLightInfo left_turn = 3;
    optional SingleLightInfo straight = 4;
    optional SingleLightInfo right_turn = 5;
    optional LaneStopPoint current_lane_stop_point = 6;

}

// 单个标牌信息
message Road_sign {
	required uint32 type = 1;	// 类型:1 禁止停车 ,2 人行道,3 休息服务区,4 前方学校,5 停车场,
	                                //      6 限速7 危险品禁止驶入,8 禁止鸣笛,9 限重,10 公交站
	optional uint32 detail = 2;     // 标牌细节,暂只对限速和限重有用，为限速和限重值
	optional int32 lng = 3;         // 经度*1e7
	optional int32 lat = 4;         // 纬度*1e7
}

// 单个障碍物信息
message Obstacle { 
	// 障碍物类型
	enum OBS_TYPE{
		HUMAN 	    = 0;	// 人
		VEHICLE	    = 1;	// 车
		OTHER	    = 2;	// 其他障碍
	}
	required int32 id = 1;		// 障碍物 ID 
	required OBS_TYPE type = 2;	// 障碍物类型
	required int32 lng = 3;		// 实际经度*1e7
	required int32 lat = 4;		// 实际纬度*1e7 
	optional uint32 speed = 5;      // 速度*100
	optional uint32 lane_id = 6;    // 车道id
	optional uint32 sec = 7;    // 时间戳（秒值）
	optional uint32 msec = 8;    // 时间戳（毫秒值）
}




// -------------下面是要传给apollo的消息包类型-----------------------------------------------

message ObuMsg {
	required uint32	count = 1; 		    // 每次加1
	optional Car_info car = 2;      	// 本车信息
	optional Lane_info lanes = 3;		// 本车车道信息
	optional TrafficLightInfo lights = 4;  // 红绿灯信息
	repeated Road_sign signs = 5;   	// 道路标牌信息
	repeated Obstacle obs = 6;			// 障碍物信息
	repeated Car_info cars_nearby = 7;	// 周边车辆信息
} 




